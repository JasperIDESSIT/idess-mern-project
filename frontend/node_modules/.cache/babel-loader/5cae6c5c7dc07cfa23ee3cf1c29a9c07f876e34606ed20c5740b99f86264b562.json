{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IdessIT\\\\Documents\\\\GitHub\\\\idess-mern-project\\\\frontend\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Swal from 'sweetalert2'; // Import SweetAlert\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchTasks();\n  }, []); // Empty dependency array to fetch tasks only once when component mounts\n\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('/api/tasks');\n      if (response.ok) {\n        const tasksData = await response.json();\n        setTasks(tasksData);\n      } else {\n        throw new Error('Failed to fetch tasks');\n      }\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n      setError('Failed to fetch tasks');\n    }\n  };\n  const options = [{\n    value: 'sunday',\n    label: 'Sunday'\n  }, {\n    value: 'monday',\n    label: 'Monday'\n  }, {\n    value: 'tuesday',\n    label: 'Tuesday'\n  }, {\n    value: 'wednesday',\n    label: 'Wednesday'\n  }, {\n    value: 'thursday',\n    label: 'Thursday'\n  }, {\n    value: 'friday',\n    label: 'Friday'\n  }, {\n    value: 'saturday',\n    label: 'Saturday'\n  }];\n  const handleSubmit = async event => {\n    event.preventDefault(); // Prevent default form submission behavior\n\n    const task = {\n      title,\n      content,\n      tags: selectedTags\n    };\n    try {\n      const response = await fetch('/api/tasks/create-task', {\n        method: 'POST',\n        body: JSON.stringify(task),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        setTitle('');\n        setContent('');\n        setSelectedTags([]);\n        Swal.fire({\n          icon: 'success',\n          title: 'Task Added!',\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 3000\n        });\n        console.log('New task added!');\n        fetchTasks(); // Refresh task data after adding a new task\n      } else {\n        throw new Error('Failed to add task');\n      }\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleTagChange = selectedOptions => {\n    setSelectedTags(selectedOptions.map(option => option.value));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"card p-2 mt-2 shadow-sm bg-light bg-gradient\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-floating\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          id: \"title-input\",\n          onChange: e => setTitle(e.target.value),\n          value: title,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title-input\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-floating mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"content-input\",\n          type: \"text\",\n          onChange: e => setContent(e.target.value),\n          value: content,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content-input\",\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"ms-2 small mt-2 text-muted\",\n        children: \"Day/s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: options,\n        isMulti: true,\n        onChange: handleTagChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-sm btn-success mt-2\",\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: task.title\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"uJCydTn/MOVUzyEcUend10Y1SPw=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","Select","Swal","jsxDEV","_jsxDEV","TaskForm","_s","title","setTitle","content","setContent","selectedTags","setSelectedTags","tasks","setTasks","error","setError","fetchTasks","response","fetch","ok","tasksData","json","Error","console","options","value","label","handleSubmit","event","preventDefault","task","tags","method","body","JSON","stringify","headers","fire","icon","toast","position","showConfirmButton","timer","log","handleTagChange","selectedOptions","map","option","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","id","onChange","e","target","required","htmlFor","isMulti","_c","$RefreshReg$"],"sources":["C:/Users/IdessIT/Documents/GitHub/idess-mern-project/frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Swal from 'sweetalert2'; // Import SweetAlert\r\n\r\nconst TaskForm = () => {\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [tasks, setTasks] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchTasks();\r\n    }, []); // Empty dependency array to fetch tasks only once when component mounts\r\n\r\n    const fetchTasks = async () => {\r\n        try {\r\n            const response = await fetch('/api/tasks');\r\n            if (response.ok) {\r\n                const tasksData = await response.json();\r\n                setTasks(tasksData);\r\n            } else {\r\n                throw new Error('Failed to fetch tasks');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching tasks:', error);\r\n            setError('Failed to fetch tasks');\r\n        }\r\n    };\r\n\r\n    const options = [\r\n        { value: 'sunday', label: 'Sunday' },\r\n        { value: 'monday', label: 'Monday' },\r\n        { value: 'tuesday', label: 'Tuesday' },\r\n        { value: 'wednesday', label: 'Wednesday' },\r\n        { value: 'thursday', label: 'Thursday' },\r\n        { value: 'friday', label: 'Friday' },\r\n        { value: 'saturday', label: 'Saturday' }\r\n    ];\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault(); // Prevent default form submission behavior\r\n        \r\n        const task = { title, content, tags: selectedTags };\r\n    \r\n        try {\r\n            const response = await fetch('/api/tasks/create-task', {\r\n                method: 'POST',\r\n                body: JSON.stringify(task),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n    \r\n            if (response.ok) {\r\n                setTitle('');\r\n                setContent('');\r\n                setSelectedTags([]);\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Task Added!',\r\n                    toast: true,\r\n                    position: 'top-end',\r\n                    showConfirmButton: false,\r\n                    timer: 3000\r\n                });\r\n                console.log('New task added!');\r\n                fetchTasks(); // Refresh task data after adding a new task\r\n            } else {\r\n                throw new Error('Failed to add task');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error adding task:', error);\r\n        }\r\n    };\r\n    \r\n\r\n    const handleTagChange = (selectedOptions) => {\r\n        setSelectedTags(selectedOptions.map(option => option.value));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {error && <div>Error: {error}</div>}\r\n            <form className=\"card p-2 mt-2 shadow-sm bg-light bg-gradient\" onSubmit={handleSubmit}>\r\n                <h3>Create Task</h3>\r\n\r\n                <div className=\"form-floating\">\r\n                    <input\r\n                        className='form-control'\r\n                        type=\"text\"\r\n                        id=\"title-input\"\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                        value={title}\r\n                        required\r\n                    />\r\n                    <label htmlFor=\"title-input\">Title</label>\r\n                </div>\r\n\r\n                <div className=\"form-floating mt-2\">\r\n                    <textarea\r\n                        className='form-control'\r\n                        id=\"content-input\"\r\n                        type=\"text\"\r\n                        onChange={(e) => setContent(e.target.value)}\r\n                        value={content}\r\n                        required\r\n                    />\r\n                    <label htmlFor=\"content-input\">Content</label>\r\n                </div>\r\n\r\n                <label className='ms-2 small mt-2 text-muted'>Day/s</label>\r\n                <Select\r\n                    options={options}\r\n                    isMulti\r\n                    onChange={handleTagChange}\r\n                    required\r\n                />\r\n\r\n                <button className='btn btn-sm btn-success mt-2' type=\"submit\">Add Task</button>\r\n            </form>\r\n\r\n            <div>\r\n                <h3>Tasks</h3>\r\n                <ul>\r\n                    {tasks.map(task => (\r\n                        <li key={task.id}>{task.title}</li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}