{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IdessIT\\\\Documents\\\\GitHub\\\\idess-mern-project\\\\frontend\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Swal from \"sweetalert2\"; // Import SweetAlert\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  fetchActiveTasks\n}) => {\n  _s();\n  // Accept fetchActiveTasks as a prop\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [dateToday, setDateToday] = useState(new Date());\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setDateToday(new Date());\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const options = [{\n    value: \"sunday\",\n    label: \"Sunday\"\n  }, {\n    value: \"monday\",\n    label: \"Monday\"\n  }, {\n    value: \"tuesday\",\n    label: \"Tuesday\"\n  }, {\n    value: \"wednesday\",\n    label: \"Wednesday\"\n  }, {\n    value: \"thursday\",\n    label: \"Thursday\"\n  }, {\n    value: \"friday\",\n    label: \"Friday\"\n  }, {\n    value: \"saturday\",\n    label: \"Saturday\"\n  }];\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const task = {\n      title,\n      content,\n      tags: selectedTags,\n      createdAt: dateToday\n    };\n    try {\n      const response = await fetch(\"/api/tasks/create-task\", {\n        method: \"POST\",\n        body: JSON.stringify(task),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        setTitle(\"\");\n        setContent(\"\");\n        setSelectedTags([]); // Clear selected options\n        Swal.fire({\n          icon: \"success\",\n          title: \"Task Added!\",\n          toast: true,\n          position: \"top-end\",\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: true\n        });\n        console.log(\"New task added!\");\n        fetchActiveTasks();\n      }\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n    }\n  };\n  const handleTagChange = selectedOptions => {\n    setSelectedTags(selectedOptions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"card p-2 mt-2 shadow-sm bg-light bg-gradient\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"fw-bold\",\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-floating\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        id: \"title-input\",\n        type: \"text\",\n        onChange: e => setTitle(e.target.value),\n        value: title,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title-input\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-floating mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"content-input\",\n        type: \"text\",\n        onChange: e => setContent(e.target.value),\n        value: content,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"content-input\",\n        children: \"Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"ms-2 small mt-2 text-muted\",\n      children: \"Day/s\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: options,\n      isMulti: true,\n      onChange: handleTagChange,\n      value: selectedTags // Set the value prop to selectedTags\n      ,\n      required: true,\n      closeMenuOnSelect: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-sm btn-success mt-2\",\n      type: \"submit\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"KdhK2xxTBkZ0BXfXzfqoVGpsEyE=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","Select","Swal","jsxDEV","_jsxDEV","TaskForm","fetchActiveTasks","_s","title","setTitle","content","setContent","selectedTags","setSelectedTags","dateToday","setDateToday","Date","intervalId","setInterval","clearInterval","options","value","label","handleSubmit","event","preventDefault","task","tags","createdAt","response","fetch","method","body","JSON","stringify","headers","ok","fire","icon","toast","position","showConfirmButton","timer","timerProgressBar","console","log","error","handleTagChange","selectedOptions","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onChange","e","target","required","htmlFor","isMulti","closeMenuOnSelect","_c","$RefreshReg$"],"sources":["C:/Users/IdessIT/Documents/GitHub/idess-mern-project/frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Swal from \"sweetalert2\"; // Import SweetAlert\r\n\r\nconst TaskForm = ({ fetchActiveTasks }) => {\r\n  // Accept fetchActiveTasks as a prop\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [dateToday, setDateToday] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setDateToday(new Date());\r\n    }, 1000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const options = [\r\n    { value: \"sunday\", label: \"Sunday\" },\r\n    { value: \"monday\", label: \"Monday\" },\r\n    { value: \"tuesday\", label: \"Tuesday\" },\r\n    { value: \"wednesday\", label: \"Wednesday\" },\r\n    { value: \"thursday\", label: \"Thursday\" },\r\n    { value: \"friday\", label: \"Friday\" },\r\n    { value: \"saturday\", label: \"Saturday\" },\r\n  ];\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n  \r\n    const task = { title, content, tags: selectedTags, createdAt: dateToday };\r\n  \r\n    try {\r\n      const response = await fetch(\"/api/tasks/create-task\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(task),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        setTitle(\"\");\r\n        setContent(\"\");\r\n        setSelectedTags([]); // Clear selected options\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Task Added!\",\r\n          toast: true,\r\n          position: \"top-end\",\r\n          showConfirmButton: false,\r\n          timer: 3000,\r\n          timerProgressBar: true,\r\n        });\r\n        console.log(\"New task added!\");\r\n  \r\n        fetchActiveTasks();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding task:\", error);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleTagChange = (selectedOptions) => {\r\n    setSelectedTags(selectedOptions);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"card p-2 mt-2 shadow-sm bg-light bg-gradient\"\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <h3 className=\"fw-bold\">Create Task</h3>\r\n\r\n      <div className=\"form-floating\">\r\n        <input\r\n          className=\"form-control\"\r\n          id=\"title-input\"\r\n          type=\"text\"\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          value={title}\r\n          required\r\n        />\r\n        <label htmlFor=\"title-input\">Title</label>\r\n      </div>\r\n\r\n      <div className=\"form-floating mt-2\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"content-input\"\r\n          type=\"text\"\r\n          onChange={(e) => setContent(e.target.value)}\r\n          value={content}\r\n          required\r\n        />\r\n        <label htmlFor=\"content-input\">Content</label>\r\n      </div>\r\n\r\n      <label className=\"ms-2 small mt-2 text-muted\">Day/s</label>\r\n      <Select\r\n        options={options}\r\n        isMulti\r\n        onChange={handleTagChange}\r\n        value={selectedTags} // Set the value prop to selectedTags\r\n        required\r\n        closeMenuOnSelect={false}\r\n      />\r\n\r\n      <button className=\"btn btn-sm btn-success mt-2\" type=\"submit\">\r\n        Add Task\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}